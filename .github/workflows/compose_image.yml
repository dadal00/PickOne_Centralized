name: Build Docker Image

on:
  push:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Prepare Build
        id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "runs=1"      >> "$GITHUB_OUTPUT"
            echo "env1=.env"   >> "$GITHUB_OUTPUT"
            echo "tag1=production" >> "$GITHUB_OUTPUT"
          else
            echo "runs=2"          >> "$GITHUB_OUTPUT"
            echo "env1=.env"       >> "$GITHUB_OUTPUT"
            echo "tag1=dev"        >> "$GITHUB_OUTPUT"
            echo "env2=.env.local" >> "$GITHUB_OUTPUT"
            echo "tag2=dev-local"  >> "$GITHUB_OUTPUT"
          fi

      - name: Build and Push Docker Images
        env:
          RUNS: ${{ steps.vars.outputs.runs }}
          ENV1: ${{ steps.vars.outputs.env1 }}
          TAG1: ${{ steps.vars.outputs.tag1 }}
          ENV2: ${{ steps.vars.outputs.env2 }}
          TAG2: ${{ steps.vars.outputs.tag2 }}
        run: |
          sudo apt-get update && sudo apt-get install -y gettext

          for i in $(seq 1 $RUNS); do
            ENVFILE_VAR="ENV${i}"
            TAGVAR="TAG${i}"
            ENVFILE="${!ENVFILE_VAR}"
            SUFFIX="${!TAGVAR}"

            set -a
            source "$ENVFILE"
            set +a

            cd deploy
            envsubst < docker-build.main.yml \
              | sudo docker compose -f - build

            echo "${{ secrets.GITHUB_TOKEN }}" \
              | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            for service in rust svelte caddy; do
              local_image="main_${service}:latest"
              remote_image="ghcr.io/${{ github.repository_owner }}/pickone_${service}:${SUFFIX}"
              docker tag "$local_image" "$remote_image"
              docker push "$remote_image"
            done

            cd ..
          done

      - name: Scan Rust image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/pickone_rust:${{ steps.vars.outputs.tag1 }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Scan Svelte image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/pickone_svelte:${{ steps.vars.outputs.tag1 }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Scan Caddy image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/pickone_caddy:${{ steps.vars.outputs.tag1 }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
